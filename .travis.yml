dist: bionic
language: php

php:
#  - 7.3
#  - 7.2
  - 7.1

addons:
  chrome: stable

services:
  - mysql

env:
  global:
    - MODULE=commerce_yandex_checkout
    - PATH="$PATH:$HOME/.composer/vendor/bin"
    - SYMFONY_DEPRECATIONS_HELPER='disabled'
  jobs:
#    - DRUPAL_CORE=8.6.x
#    - DRUPAL_CORE=8.7.x
    - DRUPAL_CORE=8.8.x
#    - DRUPAL_CORE=8.9.x

jobs:
  fast_finish: true

# Cache composer downloads.
cache:
  directories:
    - $HOME/.composer/cache

before_install:
  # Disable xdebug.
  - phpenv config-rm xdebug.ini

  # Update composer.
  - composer self-update

  - export COMPOSER_MEMORY_LIMIT=-1

  - composer global require "hirak/prestissimo:^0.3"
  - composer global require "drupal/coder:8.3.*"
  - phpcs --config-set installed_paths $HOME/.composer/vendor/drupal/coder/coder_sniffer

install:
  # Remember the current entity test directory for later use in the Drupal installation.
  - TESTDIR=$(pwd)
  # Navigate out of module directory to prevent blown stack by recursive module lookup.
  - cd ..

  # Create the database.
  - mysql -e "create database $MODULE"
  # Export web server URL for browser tests.
  - export SIMPLETEST_DB=mysql://root:@127.0.0.1/$MODULE

  # Download Drupal core.
  - travis_retry git clone --depth=1 --branch $DRUPAL_CORE https://git.drupal.org/project/drupal.git
  - cd drupal
  # Store the path to Drupal root.
  - DRUPAL_BUILD_DIR=$(pwd)

  # Reference $MODULE in build site.
  - ln -s $TESTDIR modules/$MODULE

  # Bring in the module dependencies without requiring a merge plugin. The
  # require also triggers a full 'composer install'.

  - composer --working-dir=$DRUPAL_BUILD_DIR require behat/mink:^1.7
  - composer --working-dir=$DRUPAL_BUILD_DIR require behat/mink-goutte-driver:^1.2
  - composer --working-dir=$DRUPAL_BUILD_DIR require behat/mink-selenium2-driver:^1.3

  - composer --working-dir=$DRUPAL_BUILD_DIR require drupal/commerce:^2.14
  - composer --working-dir=$DRUPAL_BUILD_DIR require yandex-money/yandex-checkout-sdk-php:^1.5

  # For Drupal < 8.8 we have to manually upgrade zend-stdlib to avoid PHP 7.3 incompatibilities.
  - if [[ "$DRUPAL_CORE" = "8.6.x" || "$DRUPAL_CORE" = "8.7.x" ]];
      then composer --working-dir=$DRUPAL_BUILD_DIR require zendframework/zend-stdlib:3.2.1;
    fi

  # For Drupal < 8.8 we have to manually upgrade phpunit to avoid PHP 7.3 incompatibilities.
  - if [[ "$DRUPAL_CORE" = "8.6.x" || "$DRUPAL_CORE" = "8.7.x" ]];
      then composer --working-dir=$DRUPAL_BUILD_DIR run-script drupal-phpunit-upgrade;
    fi

  # Install Chromedriver.
  - mkdir travis-chromedriver
  - CHROMEDRIVER_VERSION=$(wget http://chromedriver.storage.googleapis.com/LATEST_RELEASE -qO-)
  - wget http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
  - unzip chromedriver_linux64.zip -d travis-chromedriver && rm -f chromedriver_linux64.zip
  - chmod a+x travis-chromedriver/chromedriver
  - export PATH=$PWD/travis-chromedriver:$PATH
  - chromedriver --version
  - google-chrome-stable --version

  # Start a web server on port 8888, run in the background; wait for initialization.
  - nohup php -S localhost:8888 > /dev/null 2>&1 &
  # Export web server URL for browser tests.
  - export SIMPLETEST_BASE_URL=http://localhost:8888

before_script:
  - google-chrome-stable --headless --disable-gpu --no-sandbox --remote-debugging-port=9222 http://localhost &
  - export MINK_DRIVER_ARGS_WEBDRIVER='["chrome", {"browserName":"chrome","chromeOptions":{"args":["--disable-gpu","--headless","--no-sandbox","--disable-dev-shm-usage","--disable-extensions"]}}, "http://localhost:9515"]'
  - chromedriver &

script:
  - $DRUPAL_BUILD_DIR/vendor/bin/phpunit --configuration $DRUPAL_BUILD_DIR/core --group $MODULE --verbose
  - phpcs --report=full --colors --standard="Drupal,DrupalPractice" --extensions="php,module,inc,install,profile,theme" --ignore="tests" $TESTDIR
